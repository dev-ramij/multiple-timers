{"version":3,"sources":["media/Leapfrog.ogg","components/utils.js","components/SingleTimer/TitleBar.js","components/SingleTimer/TimeButtons.js","components/SingleTimer/FullTimer.js","components/SearchBar/AddTimerBtn.js","components/SearchBar/SearchBar.js","components/PlayAllButton/PlayAll.js","App.js","index.js"],"names":["getIdName","id","substring","lastIndexOf","parseTime","input","onlySeconds","getMidNight","time","Date","durationSeconds","getHours","getMinutes","getSeconds","setSeconds","setHours","TitleBar","props","removeTimer","className","IconButton","color","onClick","localStorage","removeItem","TimeButtons","pause","resume","restart","isRunning","clockValues","every","e","Boolean","utils","FullTimer","expiryTimestamp","updateTimeoutSeconds","isHidden","useTimer","autoStart","onExpire","Swal","close","audio","Audio","audioURL","loop","play","fire","title","icon","then","seconds","minutes","hours","useState","inputStorage","getItem","JSON","parse","toString","setInput","useEffect","setItem","stringify","TimerBody","map","item","index","length","LocalizationProvider","dateAdapter","AdapterDateFns","TimePicker","ampm","ampmInClock","views","inputFormat","mask","label","value","onChange","newValue","renderInput","params","TextField","onKeyDown","event","key","AddTimerBtn","createTimer","style","Search","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","width","SearchIconWrapper","paddingRight","spacing","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","padding","paddingLeft","transition","transitions","create","SearchBar","changeInputFilter","sortList","inputFilter","setinputFilter","Box","sx","flexGrow","AppBar","Toolbar","target","placeholder","inputProps","PlayAll","timerList","disableButton","setdisableButton","Button","forEach","timer","document","getElementById","click","disabled","variant","App","timerStorage","getStorage","setTimerList","InputFilter","setInputFilter","a","inputValidator","result","timeoutSeconds","toLocaleLowerCase","includes","filter","t","newList","timerIndex","findIndex","obj","timeChange","reactDom","render"],"mappings":"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","file":"static/js/main.1ed02614.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Leapfrog.00b4adbd.ogg\";","import audioURL from \"../media/Leapfrog.ogg\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport function getIdName(id) {\r\n  return id.substring(0, id.lastIndexOf(\" \"));\r\n}\r\n\r\nexport function playAudio(id) {\r\n  Swal.close();\r\n  let audio = new Audio(audioURL);\r\n  audio.loop = true;\r\n  audio.play();\r\n  Swal.fire({ title: `${getIdName(id)}'s off`, icon: \"warning\" }).then(() => {\r\n    audio.loop = false;\r\n    audio.pause();\r\n  });\r\n}\r\n\r\n/**\r\n * @param {Date} input - current value of TimePicker Component\r\n * @param {boolean} onlySeconds - if true, parseTime return time in seconds\r\n * @returns {Date|number}\r\n */\r\nexport function parseTime(input, onlySeconds) {\r\n  if (!input || input === null) return getMidNight();\r\n  let time = new Date();\r\n  let durationSeconds =\r\n    input.getHours() * 60 ** 2 + input.getMinutes() * 60 + input.getSeconds();\r\n  if (onlySeconds) return durationSeconds;\r\n  // if the timer is set to 00:00:00\r\n  if (!durationSeconds) return null;\r\n  time.setSeconds(time.getSeconds() + durationSeconds);\r\n  return time;\r\n}\r\n\r\nfunction getMidNight() {\r\n  // workaround to get 00:00:00 at timer's creation\r\n  const time = new Date();\r\n  time.setHours(0, 0, 0, 0);\r\n  return time;\r\n}\r\n\r\nexport function getInputStorage(id) {\r\n  let inputStorage = localStorage.getItem(`input ${id}`);\r\n  if (inputStorage === \"null\" || !inputStorage) {\r\n    return getMidNight();\r\n  }\r\n  return new Date(JSON.parse(inputStorage.toString()));\r\n}\r\n","import { IconButton } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { getIdName } from \"../utils\";\r\n\r\nexport default function TitleBar(props) {\r\n  const { id, removeTimer } = props;\r\n  return (\r\n    <div className=\"title-bar\">\r\n      <h2>{getIdName(id)}</h2>\r\n      <IconButton\r\n        // style={{ color: \"white\" }}\r\n        aria-label=\"delete\"\r\n        color=\"default\"\r\n        onClick={() => {\r\n          localStorage.removeItem(`input ${id}`);\r\n          removeTimer();\r\n        }}\r\n      >\r\n        <DeleteIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n","import { IconButton } from \"@material-ui/core\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport PauseIcon from \"@material-ui/icons/Pause\";\r\nimport ReplayIcon from \"@material-ui/icons/Replay\";\r\nimport * as utils from \"../utils\";\r\n\r\nexport default function TimeButtons(props) {\r\n  const { pause, resume, restart, isRunning, clockValues, input, id } = props;\r\n  return (\r\n    <div className=\"buttons\">\r\n      <IconButton\r\n        // style={{ color: \"white\" }}\r\n        onClick={() => {\r\n          if (!isRunning()) {\r\n            if (!clockValues().every((e) => Boolean(e))) {\r\n              let time = utils.parseTime(input());\r\n              if (!time) return;\r\n              restart(time);\r\n            } else {\r\n              resume();\r\n            }\r\n          } else {\r\n            pause();\r\n          }\r\n        }}\r\n        id={\"button_\" + id}\r\n      >\r\n        {!isRunning() ? <PlayArrowIcon /> : <PauseIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        // style={{ color: \"white\" }}\r\n        onClick={() => {\r\n          let time = utils.parseTime(input());\r\n          restart(time);\r\n          pause();\r\n        }}\r\n      >\r\n        <ReplayIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useTimer } from \"react-timer-hook\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport AdapterDateFns from \"@material-ui/lab/AdapterDateFns\";\r\nimport LocalizationProvider from \"@material-ui/lab/LocalizationProvider\";\r\nimport TimePicker from \"@material-ui/lab/TimePicker\";\r\nimport TitleBar from \"./TitleBar\";\r\nimport TimeButtons from \"./TimeButtons\";\r\nimport * as utils from \"../utils\";\r\nimport \"../../index.css\";\r\n\r\nexport default function FullTimer(props) {\r\n  let { expiryTimestamp, updateTimeoutSeconds, removeTimer, id, isHidden } =\r\n    props;\r\n\r\n  const { seconds, minutes, hours, isRunning, pause, resume, restart } =\r\n    useTimer({\r\n      autoStart: false,\r\n      expiryTimestamp,\r\n      onExpire: () => {\r\n        let time = utils.parseTime(input);\r\n        restart(time);\r\n        pause();\r\n        utils.playAudio(id);\r\n      },\r\n    });\r\n\r\n  const clockValues = [hours, minutes, seconds];\r\n\r\n  const [input, setInput] = useState(utils.getInputStorage(id));\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(`input ${id}`, JSON.stringify(input));\r\n    updateTimeoutSeconds(utils.parseTime(input, true));\r\n    let time = utils.parseTime(input);\r\n    restart(time);\r\n    pause();\r\n    // eslint-disable-next-line\r\n  }, [input]);\r\n\r\n  if (isHidden) return <></>;\r\n\r\n  function TimerBody() {\r\n    return (\r\n      <div className=\"clock buttons\">\r\n        <div className=\"actual-timer\">\r\n          {clockValues.map((item, index) => (\r\n            <>\r\n              <div>{item < 10 ? `0${item}` : item}</div>\r\n              {index === clockValues.length - 1 ? \"\" : \":\"}\r\n            </>\r\n          ))}\r\n        </div>\r\n        <TimeButtons\r\n          pause={() => pause()}\r\n          resume={() => resume()}\r\n          restart={(time) => restart(time)}\r\n          isRunning={() => isRunning}\r\n          clockValues={() => clockValues}\r\n          input={() => input}\r\n          id={id}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section className=\"wrapper\">\r\n      <TitleBar id={id} removeTimer={removeTimer} />\r\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n        <TimePicker\r\n          ampm={false}\r\n          ampmInClock={false}\r\n          views={[\"hours\", \"minutes\", \"seconds\"]}\r\n          inputFormat=\"HH:mm:ss\"\r\n          mask=\"__:__:__\"\r\n          label=\"INSERT TIME HERE\"\r\n          value={input}\r\n          onChange={(newValue) => {\r\n            setInput(newValue);\r\n          }}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              // style={{ color: \"white\" }}\r\n              onKeyDown={(event) => {\r\n                if (event.key === \"Enter\") {\r\n                  let time = utils.parseTime(input);\r\n                  restart(time);\r\n                }\r\n              }}\r\n              {...params}\r\n            />\r\n          )}\r\n        />\r\n      </LocalizationProvider>\r\n      <TimerBody />\r\n      <hr />\r\n    </section>\r\n  );\r\n}\r\n","import { IconButton } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nexport default function AddTimerBtn(props) {\r\n  const { createTimer } = props;\r\n  return (\r\n    <>\r\n      <IconButton\r\n        onClick={() => {\r\n          createTimer();\r\n        }}\r\n      >\r\n        <AddIcon style={{ color: \"white\" }} />\r\n      </IconButton>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { styled, alpha } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport AddTimerBtn from \"./AddTimerBtn\";\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.0),\r\n  marginLeft: 0,\r\n  width: \"100%\",\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  paddingRight: theme.spacing(1),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  width: \"100%\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nexport default function SearchBar(props) {\r\n  const { createTimer, changeInputFilter, sortList } = props;\r\n  const [inputFilter, setinputFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    changeInputFilter(inputFilter);\r\n    // eslint-disable-next-line\r\n  }, [inputFilter]);\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1, width: \"100%\" }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Search>\r\n            <SearchIconWrapper>\r\n            </SearchIconWrapper>\r\n            <StyledInputBase\r\n              onChange={(event) => setinputFilter(event.target.value)}\r\n              placeholder=\"Click + to add timers\"\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              onKeyDown={(event) => {\r\n                if (event.key === \"Escape\") {\r\n                  event.target.value = \"\";\r\n                  setinputFilter(\"\");\r\n                }\r\n              }}\r\n            />\r\n          </Search>\r\n          <AddTimerBtn createTimer={createTimer} />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n","import { Button } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function PlayAll(props) {\r\n    const { timerList } = props;\r\n    const [disableButton, setdisableButton] = useState(false)\r\n    return (\r\n        <>\r\n            <Button\r\n                onClick={() => {\r\n                    setdisableButton(true);\r\n                    timerList.forEach(timer => {\r\n                        const el = document.getElementById(\"button_\" + timer.id);\r\n                        el.click();\r\n                    })\r\n                    setdisableButton(false)\r\n\r\n                }}\r\n                disabled={disableButton}\r\n                variant=\"contained\" color=\"success\">Play All</Button>\r\n        </>\r\n    )\r\n}","// import FullTimer from \"./components/FullTimer\";\r\n// import NavBar from \"./components/NavBar\";\r\nimport FullTimer from \"./components/SingleTimer/FullTimer\";\r\nimport Searchbar from \"./components/SearchBar/SearchBar\";\r\nimport PlayAll from \"./components/PlayAllButton/PlayAll\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"./index.css\";\r\n\r\nexport default function App() {\r\n  // ************************************************************************ //\r\n\r\n  // ********************* //\r\n  // *** STATES *** //\r\n  // ********************* //\r\n\r\n  // ************************************************************************ //\r\n\r\n  const [timerList, setTimerList] = useState(getStorage());\r\n  const [InputFilter, setInputFilter] = useState(\"\");\r\n\r\n  // ************************************************************************ //\r\n\r\n  // *********************   //\r\n  // *** STATES MODIFIER *** //\r\n  // *********************   //\r\n\r\n  // ************************************************************************ //\r\n\r\n  function getStorage() {\r\n    let timerStorage = localStorage.getItem(\"timerList\");\r\n    if (!timerStorage || timerStorage === []) return [];\r\n    return JSON.parse(timerStorage.toString());\r\n  }\r\n\r\n  async function createTimer() {\r\n    await Swal.fire({\r\n      title: \"Enter timer's name\",\r\n      input: \"text\",\r\n      inputValidator: (value) => {\r\n        if (!value) return \"You need to write something!\";\r\n      },\r\n    }).then((result) => {\r\n      if (!result.value) return;\r\n      setTimerList((timerList) => [\r\n        ...timerList,\r\n        {\r\n          timeoutSeconds: 0,\r\n          id: `${result.value} ${timerList.length}`,\r\n          expiryTimestamp: 0,\r\n        },\r\n      ]);\r\n    });\r\n  }\r\n\r\n  function timeChange(timer, seconds) {\r\n    let newList = [...timerList];\r\n    const timerIndex = newList.findIndex((obj) => {\r\n      return obj.id === timer.id;\r\n    });\r\n    newList[timerIndex].timeoutSeconds = seconds;\r\n    setTimerList(newList);\r\n  }\r\n\r\n  function removeTimer(timer) {\r\n    setTimerList((timerList) => timerList.filter((t) => t.id !== timer.id));\r\n  }\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"timerList\", JSON.stringify(timerList));\r\n  }, [timerList]);\r\n\r\n  // ************************************************************************ //\r\n\r\n  // ********************* //\r\n  // *** HTML STRUCTURE *** //\r\n  // ********************* //\r\n\r\n  // ************************************************************************ //\r\n\r\n  return (\r\n    <div id=\"main\">\r\n      <Searchbar\r\n        createTimer={() => createTimer()}\r\n        changeInputFilter={(event) => setInputFilter(event)}\r\n      />\r\n      {timerList.map((timer) => (\r\n        <FullTimer\r\n          key={timer.id}\r\n          id={timer.id}\r\n          isHidden={\r\n            !timer.id\r\n              .substring(0, timer.id.lastIndexOf(\" \"))\r\n              .toLocaleLowerCase() // id without index\r\n              .includes(InputFilter.toLocaleLowerCase())\r\n          }\r\n          expiryTimestamp={timer.expiryTimestamp}\r\n          removeTimer={() => removeTimer(timer)}\r\n          updateTimeoutSeconds={(seconds) => timeChange(timer, seconds)}\r\n          \r\n        />\r\n      ))}\r\n      <PlayAll\r\n        timerList={timerList}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import reactDom from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nreactDom.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}